name: Deploy Pull Request Builds
# The workflow "Build Pull Request Deployment Packages" does not have access to repository secrets.
# Any files received through the incoming GitHub artifacts must be treated as static and not executed.

on:
  workflow_run:
    workflows: ['Build Pull Request Deployment Packages']
    types:
      - completed

env:
  S3_REVIEW_BUCKET: review-developer-va-gov

jobs:
  pr_comment:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v4

      - name: Download PR Build Artifacts
        uses: actions/github-script@v7
        with:
          script: |
            var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr-builds"
            })[0];
            var download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/pr-builds.zip', Buffer.from(download.data));

      - name: Unzip
        run: |
          mkdir build
          unzip pr-builds.zip -d build

      - name: See what's downloaded
        run: ls -la ./build

      - id: get_pr_info
        name: Get PR and hash data
        run: |
          PR_NUMBER=`jq -r '.pr' ./build/dev/deploy.json`
          COMMIT_HASH=`jq -r '.commit' ./build/dev/deploy.json`
          echo $PR_NUMBER
          echo $COMMIT_HASH
          echo "pr=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "hash=$COMMIT_HASH" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.0
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}
          role-to-assume: ${{secrets.AWS_ROLE_ARN}}
          role-duration-seconds: 1200
          role-session-name: GitHubActions

      - name: Upload to PR review s3 bucket
        env:
          COMMIT_HASH: ${{steps.get_pr_info.outputs.hash}}
        run: |
          aws s3 sync --no-progress --acl public-read build/ s3://$S3_REVIEW_BUCKET/gha-$COMMIT_HASH/
          for env in 'dev' 'staging' 'production' ; do
            aws s3 cp --acl public-read --content-type="application/json" s3://$S3_REVIEW_BUCKET/gha-$COMMIT_HASH/$env/platform-backend/v0/consumers/applications s3://$S3_REVIEW_BUCKET/gha-$COMMIT_HASH/$env/platform-backend/v0/consumers/applications
            aws s3 cp --acl public-read --content-type="application/json" s3://$S3_REVIEW_BUCKET/gha-$COMMIT_HASH/$env/platform-backend/v0/consumers/test-user-data s3://$S3_REVIEW_BUCKET/gha-$COMMIT_HASH/$env/platform-backend/v0/consumers/test-user-data
          done

      - name: Add PR builds comment
        env:
          COMMIT_HASH: ${{steps.get_pr_info.outputs.hash}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          PR_NUMBER: ${{steps.get_pr_info.outputs.pr}}
        run: |
          links=""
          for env in 'dev' 'staging' 'production' ; do
            links="$links - [${env}](https://$S3_REVIEW_BUCKET.s3-us-gov-west-1.amazonaws.com/gha-$COMMIT_HASH/$env/index.html) <br />"
          done
          echo $links;
          comment="These changes have been deployed to an s3 bucket. A build for each environment is available: <br /><br /> ${links} <br /> due to s3 website hosting limitations in govcloud you need to first navigate to index.html explicitly."
          echo $PR_NUMBER
          gh pr comment $PR_NUMBER --body "$comment"
