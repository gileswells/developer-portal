name: Generate Visual Regressions

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'What PR number needs updated visual regressions?'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.pr_number }}
  cancel-in-progress: true

jobs:
  update_visual_regressions:
    runs-on: ubuntu-latest
    container: cypress/included:13.3.1
    env:
      CYPRESS_SINGLE_SPEC: true
      failOnSnapshotDiff: false
      REACT_APP_VETSGOV_SWAGGER_API: http://localhost:3001
    outputs:
      branch_name: ${{ steps.pr_branch.outputs.branch_name }}
      node_version: ${{ steps.node_version.outputs.node_version }}
    steps:
      - name: Install gh
        run: |
          type -p curl >/dev/null || apt update && apt install curl -y
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && apt update \
          && apt install gh -y

      - name: Install git-lfs
        run: apt update && apt install git-lfs openssh-client -y
      - id: fetch_pr_branch
        uses: octokit/request-action@v2.x
        name: Fetch PR info
        with:
          route: GET /repos/department-of-veterans-affairs/developer-portal/pulls/${{ github.event.inputs.pr_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: pr_branch
        name: Determine PR Branch Name
        run: |
          PR_BRANCH=${{ fromJson(steps.fetch_pr_branch.outputs.data).head.ref }}
          echo $PR_BRANCH;
          echo "branch_name=$PR_BRANCH" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr_branch.outputs.branch_name }}
          lfs: true
      - name: Trust git repo ownership
        run: git config --global --add safe.directory /__w/developer-portal/developer-portal
      - name: Unshallow the checkout
        run: git fetch --prune --unshallow
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - id: node_version
        name: Set Node Version to ENV
        run: |
          NODE_VERSION=$(node -v)
          echo $NODE_VERSION
          echo "node_version=$NODE_VERSION" >> $GITHUB_OUTPUT

      - name: Install fonts
        run: apt-get update && apt-get install -y fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf --no-install-recommends
      - name: Remove unnecessary files
        run: rm -rf /var/lib/apt/lists/* \
          && apt-get purge --auto-remove -y curl
          && rm -rf /src/*.deb

      - name: Install python env
        run: |
          apt update && apt install python3 -y && ln -s /usr/bin/python3 /usr/bin/python

      - name: Start Fake LPB Server
        run: ./scripts/fake_lpb.sh

      - name: Delete all old snapshots
        run: rm -f test/image_snapshots/visual.cy.js/*

      - id: visual_test
        continue-on-error: true
        name: Cypress run
        uses: cypress-io/github-action@v6.6.1
        with:
          install-command: npm ci
          spec: cypress/e2e/visual.cy.js
          start: npm start
          wait-on: http://localhost:3001
          wait-on-timeout: 180

      - name: Commit new snapshots and push
        run: |
          # Change to a personal access token so that PR integration jobs run
          echo ${{ secrets.GIT_VISUAL_REGRESSIONS_COMMIT_TOKEN }} | gh auth login --with-token
          git add test/image_snapshots/*
          git config user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config user.name "${{ secrets.GIT_USER_NAME }}"
          git commit -m "Updated visual snapshots via GitHub Actions job"
          git push origin ${{ steps.pr_branch.outputs.branch_name }}
          # After pushing the code to the PR you need to set the PR to draft and back to ready
          # for the integration tests to run. This is a custom github cli extension as native
          # support for setting a PR to draft doesn't yet exist in the official cli methods.
          gh extension install kyanny/gh-pr-draft
          gh pr-draft ${{ github.event.inputs.pr_number }}
          gh pr ready ${{ github.event.inputs.pr_number }}
