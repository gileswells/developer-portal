name: Create Auto Deploy Maintenance Request

on:
  workflow_dispatch:

jobs:
  pre_mr_checks:
    runs-on: ubuntu-latest
    outputs:
      mr_number: ${{ steps.get_mr_number.outputs.mr_number }}
      time_string: ${{ steps.get_time_string.outputs.time_string }}
    steps:
      - name: Set timezone to Eastern
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: 'America/New_York'
      - name: Check for existing MRs
        run: |
          echo ${{secrets.GITHUB_TOKEN}} | gh auth login --with-token
          # gh issue list \
          #   -R 'department-of-veterans-affairs/lighthouse-devops-support' \
          #   -l 'repo: developer-portal' \
          #   --limit 1 \
          #   --json id,number,state,labels,title \
          #   > issue.json
          # cat issue.json
          gh issue list \
            -R 'gileswells/developer-portal' \
            -l 'repo: developer-portal' \
            --limit 1 \
            --json id,number,state,labels,title \
            > issue.json
          cat issue.json
          if [ "[]" == "$(cat issue.json)" ]; then
            :
          else
            # issue.json isn't an empty json array and there is currently an open MR tagged "repo: developer-portal"
            # Any open MR should cancel the creation of a new MR
            exit 1;
          fi
      - id: get_current_release_tag
        name: Get current release tag from production deploy.json
        run: |
          wget https://developer.va.gov/deploy.json
          RELEASE_TAG=`jq ".release" deploy.json`
          echo $RELEASE_TAG
          echo "::set-output name=release_tag::$RELEASE_TAG"
      - id: get_current_release_from_commit_hash
        name: Get currently deployed release tag from the commit hash if last deploy didn't use the release tag
        if: steps.get_current_release_tag.outputs.release_tag == ''
        run: |
          COMMIT_HASH=`jq ".commit" deploy.json`
          echo $COMMIT_HASH
          $RELEASE_TAG=`gh api /repos/department-of-veterans-affairs/developer-portal/tags | jq ".[] | select(.commit.sha == \"$COMMIT_HASH\").name"`
          echo $RELEASE_TAG
          echo "::set-output name=release_tag::$RELEASE_TAG"
      - id: unified_release_tag
        name: Unify release tag regardless of how it was found
        run: |
          if [ "" != "${{ steps.get_current_release_tag.outputs.release_tag }}"]; then
            RELEASE_TAG=`echo ${{ steps.get_current_release_tag.outputs.release_tag }}`
          else
            RELEASE_TAG=`echo ${{ steps.get_current_release_from_commit_hash.outputs.release_tag }}`
          fi
          echo $RELEASE_TAG
          echo "::set-output name=release_tag::$RELEASE_TAG"
      - name: Check relase tag
        run: |
          echo ${{ steps.unified_releade_tag.outputs.release_tag }}
