name: NPM Checks

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: developer-portal-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install dependencies
        run: npm ci

  e2e:
    needs: [install]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: developer-portal-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install dependencies
        run: npm ci

      - name: Run test
        run: npm run test:e2e:ci

  unit:
    needs: [install]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: developer-portal-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install dependencies
        run: npm ci

      - name: Run test
        run: npm run test:unit:ci

  security:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run test
        run: npm audit --audit-level high

  visual:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: developer-portal-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Checkout LFS objects
        run: git lfs checkout
      - name: Install everything for Visual Regressions
        run: sudo apt-get update && sudo apt-get install -y libxss1 libxtst6 wget --no-install-recommends
      - name: Install everything for Visual Regressions
        run: wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
      - name: Install everything for Visual Regressions
        run: sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' \
      - name: Install Chrome and fonts
        run: sudo apt-get update && sudo apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf --no-install-recommends
      - name: Install everything for Visual Regressions
        run: sudo rm -rf /var/lib/apt/lists/* \
          && sudo apt-get purge --auto-remove -y curl
          && sudo rm -rf /src/*.deb
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install dependencies
        run: npm ci

      - name: Run test
        run: npm run test:visual
        continue-on-error: true

      - name: Upload failures
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_URI: ${{ secrets.AWS_S3_URI }}
        run: aws s3 cp /home/runner/work/developer-portal/developer-portal/test/image_snapshots/__diff_output__/* ${{ secrets.AWS_S3_URI }}

  lint:
    needs: [install]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: developer-portal-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install dependencies
        run: npm ci

      - name: Run test
        run: npm run lint

  accessibility:
    needs: [install]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: developer-portal-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install dependencies
        run: npm ci

      - name: Run test
        run: npm run test:accessibility:ci

  images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run test
        run: ./prohibit_image_files.sh origin/master HEAD
